services:
  coolify:
    image: "${REGISTRY_URL:-ghcr.io}/${IMAGE_NAMESPACE:-naudefirst}/${IMAGE_NAME:-airdrive-cloud}:${LATEST_IMAGE:-latest}"

    volumes:
      - /data/coolify/ssh:/var/www/html/storage/app/ssh
      - /data/coolify/applications:/var/www/html/storage/app/applications
      - /data/coolify/databases:/var/www/html/storage/app/databases
      - /data/coolify/services:/var/www/html/storage/app/services
      - /data/coolify/backups:/var/www/html/storage/app/backups
      - /data/coolify/webhooks-during-maintenance:/var/www/html/storage/app/webhooks-during-maintenance
    environment:
      APP_ENV: ${APP_ENV:-production}
      PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT:-256M}
      PHP_FPM_PM_CONTROL: ${PHP_FPM_PM_CONTROL:-dynamic}
      PHP_FPM_PM_START_SERVERS: ${PHP_FPM_PM_START_SERVERS:-1}
      PHP_FPM_PM_MIN_SPARE_SERVERS: ${PHP_FPM_PM_MIN_SPARE_SERVERS:-1}
      PHP_FPM_PM_MAX_SPARE_SERVERS: ${PHP_FPM_PM_MAX_SPARE_SERVERS:-10}
      DB_CONNECTION: pgsql
      DB_HOST: coolify-db
      DB_PORT: 5432
      DB_DATABASE: airdrive_cloud
      DB_USERNAME: postgres
      DB_PASSWORD: a19650902?
      REDIS_PASSWORD: a19650902?
    ports:
      - "${APP_PORT:-8000}:8080"
    expose:
      - "${APP_PORT:-8000}"
    healthcheck:
      test: curl --fail http://127.0.0.1:8080/api/health || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      soketi:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    volumes:
      - coolify-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: a19650902?
      POSTGRES_DB: airdrive_cloud
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d airdrive_cloud"]
      interval: 5s
      retries: 10
      timeout: 2s

  redis:
    image: redis:7-alpine
    container_name: coolify-redis
    command: ["sh", "-c", "exec redis-server --save 20 1 --loglevel warning --requirepass \"$REDIS_PASSWORD\""]
    environment:
      REDIS_PASSWORD: a19650902?
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $REDIS_PASSWORD ping"]
      interval: 5s
      retries: 10
      timeout: 2s
    volumes:
      - coolify-redis:/data

  soketi:
    image: "${REGISTRY_URL:-ghcr.io}/coollabsio/coolify-realtime:1.0.8"
    ports:
      - "${SOKETI_PORT:-6001}:6001"
      - "6002:6002"
    volumes:
      - /data/coolify/ssh:/var/www/html/storage/app/ssh
    environment:
      APP_NAME: "${APP_NAME:-Coolify}"
      SOKETI_DEBUG: "${SOKETI_DEBUG:-false}"
      SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID}"
      SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY}"
      SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET}"
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://127.0.0.1:6001/ready && wget -qO- http://127.0.0.1:6002/ready || exit 1" ]
      interval: 5s
      retries: 10
      timeout: 2s

volumes:
  coolify-db:
    name: coolify-db
  coolify-redis:
    name: coolify-redis

networks:
  coolify:
    external: true
